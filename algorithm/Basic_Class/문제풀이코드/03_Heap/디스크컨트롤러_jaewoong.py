# -*- coding: utf-8 -*-
"""Untitled19.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1BRDAFyrNXgwZw7dnVrLsu98bpdMEiPD4
"""

# 요청부터 종료까지 걸린 시간 = 수행 시간
 
def solution(jobs):
    # 총 수행시간, 총 소요시간, 작업의 갯수
    answer = 0
    time = 0
    n = len(jobs)
    
    # 가장 처음에 들어온 작업 중, 소요시간이 가장 짧은 녀석을 실행
    jobs.sort(key = lambda x: [x[0],x[1]])
    answer += jobs[0][1]
    time += jobs[0][1] + jobs[0][0]
    jobs.pop(0)
    
    # 소요시간을 기준으로 오름차순 정렬
    jobs.sort(key = lambda x: x[1])
    print(jobs)
    # 스케줄러가 빌 때까지
    while(jobs):
        for job in jobs:
            # 요청이 총 소요시간 이전에 있다면
            if job[0] <= time:
                time += job[1]
                answer += time - job[0]
                jobs.remove(job)
                break
        # 반복문이 정상적으로 끝난다: 총 소요시간보다 이전에 온 요청이 없을 경우
        else:
            time += 1  # 총 소요시간 1초 증가
    
    # 총 수행시간 / 작업의 갯수 = 평균 대기시간
    answer = answer // n
    
    return answer

