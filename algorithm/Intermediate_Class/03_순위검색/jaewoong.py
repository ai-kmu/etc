# -*- coding: utf-8 -*-
"""Untitled11.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1iGlWvphVMRSdaohmFK0ZwVQi1LHssuqA
"""

import itertools

def solution(info, query):
    answer = []
    dic = {}
    #and와 '-'를 제거
    query = [''.join(x.split('and')).replace('-','').split() for x in query]	

    for i in info:			# 각 조합의 딕셔너리 만들기
        list_word = i.split() 
        for j in range(len(list_word)):
            #여러 조합을 위해 itertools.combinations를 사용하였다.
            list_word2 = list(itertools.combinations(list_word[:-1],j))
            for k in list_word2:#조합한 리스트들을 활용
                temp = ''.join(k) #리스트들을 문자열로
                #조합별로 점수를 매김
                if temp not in dic: dic[temp] = [int(list_word[-1])]  
                else: dic[temp].append(int(list_word[-1]))   
    
    for d in dic.values():  #dic.values를 통해 점수만 뺴온다.
        d.sort()
    

    for q in query:	# 쿼리에 속한 값 찾기 & 코테 점수 만족하는 사람 수 찾기
        combi = ''.join(q[:len(q)-1]) # and를 제외한 변수를 문자열로
        if combi not in dic : answer.append(0); continue
        else:
            length = len(dic[combi])
            slist = dic[combi]
            print(slist)
            # 이진탐색 (포인터를 통해 범위를 점점 좁혀나가서 특정 값을 찾는다.)
            start = 0
            end = length
            while start < end:
                mid = (start+end)//2
                if int(q[-1]) <= slist[mid]: end = mid
                elif int(q[-1]) > slist[mid]: start = mid + 1
            answer.append(length-end)

    return answer