# -*- coding: utf-8 -*-
"""Untitled22.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Gc4Sb_To7v8mV-ycWGQf3LDOVTvjGjiI
"""

# 풀이 실패하여 정답 보고 공부하였습니다...
"""
nums = [10, 9, 2, 5, 3, 7, 101, 18]인 경우
각 인덱스별로 스스로를 포함하여 증가해가야하기 때문에 동일한 숫자인
ans = [1, 1, 1, 1, 1, 1, 1, 1] (1은 N개) 로 시작합니다.
ans[3] 에 대하여 nums[2] 에서 nums[3]이 될때 값이 커지므로, ans[3]은 1을 추가합니다.
이를 반복하여 마지막에 최대값을 출력합니다.
"""
class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
        N = len(nums)
        ans = [1] * N # 갱신하기 위한 ans 리스트 생성
        
        for i in range(1, N):
            maxi = 0
            for j in range(i):
                if nums[j] < nums[i]: # 값이 증가되는 인덱스가 확인되면
                    maxi = max(maxi, ans[j]) # ans에 더해주기위해 maxi를 이전 ans값으로 바꿔줍니다.
                    
            ans[i] = maxi + 1
        print(ans)
        
        return max(ans)