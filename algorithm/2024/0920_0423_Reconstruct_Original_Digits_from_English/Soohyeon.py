{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyNHKIxszN1DSg1bWFTWvyY9"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":null,"metadata":{"id":"Q2eOye3EvmJ5"},"outputs":[],"source":["# solution 참조\n","# https://saurus2.tistory.com/entry/LeedCode-423-Reconstruct-Original-Digits-from-English-%ED%8C%8C%EC%9D%B4%EC%8D%AC-Medium\n","\n","class Solution:\n","    def originalDigits(self, s: str) -> str:\n","        # 각 숫자를 고유하게 식별할 수 있는 문자들\n","        uniq = ['z', 'w', 'u', 'x', 'g']\n","\n","        # 각 숫자의 개수를 저장할 리스트\n","        num = []\n","\n","        # 고유 문자의 개수를 세기\n","        z = s.count('z')  # 'z' -> 0\n","        w = s.count('w')  # 'w' -> 2\n","        u = s.count('u')  # 'u' -> 4\n","        f = s.count('f') - u  # 'f' -> 5, 'u'의 개수만큼 뺌\n","        x = s.count('x')  # 'x' -> 6\n","        v = s.count('v') - f  # 'v' -> 7, 'f'의 개수만큼 뺌\n","        g = s.count('g')  # 'g' -> 8\n","        r = s.count('r') - z - u  # 'r' -> 3, 'z'와 'u'의 개수만큼 뺌\n","        o = s.count('o') - z - w - u  # 'o' -> 1, 'z', 'w', 'u'의 개수만큼 뺌\n","        n = (s.count('n') - v - o) // 2  # 'n' -> 9, 쌍으로 고려\n","\n","        # 최종 숫자 문자열 생성\n","        return (\n","            '0' * z +\n","            '1' * o +\n","            '2' * w +\n","            '3' * r +\n","            '4' * u +\n","            '5' * f +\n","            '6' * x +\n","            '7' * v +\n","            '8' * g +\n","            '9' * n\n","        )"]}]}